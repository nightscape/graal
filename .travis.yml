os: windows
language: shell

env:
    global:
        - MKS_HOME=/c/Progra~1/Git/usr/bin
        - JAVA_HOME=$HOME/labsjdk-ce-11.0.5-jvmci-19.3-b06/
        - EXTRA_JAVA_HOMES=$HOME/openjdk1.8.0_232-jvmci-19.3-b06/
        - SSL_CERT_FILE=$HOME/cacert.pem
        
        - PATH=/c/Progra~2/Micros~1.0/VC/bin/amd64:${PATH}
        - PATH=$JAVA_HOME/bin:${PATH}
        - PATH=/c/python27:/c/python27/scripts:${PATH}
        - PATH=$HOME/mx:${PATH}
        - PATH=/c/Progra~1/Git/bin:${PATH}
        
        - INCLUDE=/c/Progra~2/Micros~1.0/VC/INCLUDE:/c/Progra~2/WINDOW~3/10/include/10.0.18362.0/ucrt:/c/Progra~2/WINDOW~3/10/include/10.0.18362.0/shared:/c/Progra~2/WINDOW~3/10/include/10.0.18362.0/um:/c/Progra~2/WINDOW~3/10/include/10.0.18362.0/winrt
        - LIB=/c/Progra~2/Micros~1.0/VC/LIB/amd64:/c/Progra~2/WINDOW~3/10/lib/10.0.18362.0/ucrt/x64:/c/Progra~2/WINDOW~3/10/lib/10.0.18362.0/um/x64
        - VCINSTALLDIR=/c/Progra~2/Micros~1.0/VC/
        - VS140COMNTOOLS=/c/Progra~2/Micros~1.0/Common7/Tools/

git:
  autocrlf: input

cache:
  directories:
  #- $HOME/.m2
  #- /c/tools/Python27
  #- /c/Python27
  
before_install:
    ## Could not connect to the IGV on 127.0.0.1:4445. ##
    - netsh advfirewall firewall add rule name="IGV (in)" dir=in action=allow localport=4445 protocol=TCP
    - netsh advfirewall firewall add rule name="IGV (out)" dir=out action=allow localport=4445 protocol=TCP
    - netsh advfirewall firewall add rule name="IGV (in)" dir=in action=allow localport=4445 protocol=UDP
    - netsh advfirewall firewall add rule name="IGV (out)" dir=out action=allow localport=4445 protocol=UDP

    ## Combat long path issues during `mx unittest` ##
    #- cmd //c "reg query HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled"
    #- cmd //c "reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f"
    #- cmd //c "reg query HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled"
    
    - cd $HOME
    - wget --quiet https://curl.haxx.se/ca/cacert.pem
    
    - wget --quiet https://github.com/graalvm/openjdk8-jvmci-builder/releases/download/jvmci-19.3-b06/openjdk-8u232-jvmci-19.3-b06-windows-amd64.tar.gz
    - tar xf openjdk-8u232-jvmci-19.3-b06-windows-amd64.tar.gz

    - wget --quiet https://github.com/graalvm/labs-openjdk-11/releases/download/jvmci-19.3-b06/labsjdk-ce-11.0.5+10-jvmci-19.3-b06-windows-amd64.tar.gz
    - tar xf labsjdk-ce-11.0.5+10-jvmci-19.3-b06-windows-amd64.tar.gz
        
    #- choco upgrade python2 -y --no-progress
    #- which -a python
    #- winpty -Xallow-non-tty -Xplain python --version
    
install:
    #- env
    - cd $HOME
    
    - git clone --depth=50 --branch=master https://github.com/graalvm/mx.git
    #- pushd mx
    #- git checkout tags/5.248.5
    #- popd

    - cd $TRAVIS_BUILD_DIR

    ## Deal with file & folder names being too long for unit testing ##
    - cd ..
    - mv graal /c/

    - cd /c/graal/compiler
    
    - mx clean
    #- mx -V build
    - mx build
    
    #- mx -V unittest
    - mx gate
    
script:
	- echo Deploy stuff could go here...
